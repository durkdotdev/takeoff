import prisma from "../prisma";

/**
 * Create a new User in the database
 * @param {string} customerId Customer's ID generated by Stripe
 * @param {string} email Email address of new User
 * @param {"credentials" | "google"} signUpType Sign up type
 * @param {string} password Optional hashed password
 */
export const createUser = async (
  customerId,
  email,
  signUpType,
  password = undefined
) => {
  await prisma.user.create({
    data: {
      customerId,
      email,
      password,
      signUpType
    }
  });
};

/**
 * Delete a User from the database
 * @param {string} identifier Identifier query for Prisma lookup
 */
export const deleteUser = async (identifier) => {
  await prisma.user.delete({
    where: identifier
  });
};

/**
 * Get a User from the database
 * @param {string} identifier Identifier query for Prisma lookup
 * @returns User
 */
export const getUser = async (identifier) => {
  return await prisma.user.findUnique({
    where: identifier
  });
};

/**
 * Update a User's data in the database
 * @param {string} identifier Identifier query for Prisma lookup
 * @param {object} data Data object with updated User data
 * @returns User
 */
export const updateUser = async (identifier, data) => {
  return await prisma.user.update({
    where: identifier,
    data
  });
};
